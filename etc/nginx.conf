
map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

upstream gateways {  
    # use ip hash for sticky sessions
    ip_hash;

    # list of gateway servers
    server gateway:8000;
    # add more here: server <url>
}

upstream cloud {
    ip_hash;
    server controller:8000;
}

upstream copyservice {
    ip_hash;
    keepalive 1000;
    server copyservice:9999;
}

server {
    listen 80;

    server_name xpresso.com;

    proxy_http_version 1.1;

    sendfile on;

    default_type application/octet-stream;

    gzip on;
    gzip_comp_level 6;
    gzip_vary on;
    gzip_min_length  1000;
    gzip_proxied any;
    gzip_types text/plain text/html text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_buffers 16 8k;

    proxy_buffer_size   128k;
    proxy_buffers   4 256k;
    proxy_busy_buffers_size   256k;

    client_max_body_size 500m;
    
    root /usr/share/nginx/html;

    location / {
        try_files $uri $uri/ /index.html =404;
    }

    location /api {
        proxy_pass http://gateways;
    }

    # proxy to cloud controller
    location /controller/api {
        proxy_pass http://gateways;
    }

    location /private {
        proxy_pass http://gateways;
    }

    # prometheus endpoint
    location /metrics {
        proxy_pass http://gateways;
    }

    location /socket {
        proxy_pass http://gateways;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }

    # api for socket connection for cloud controller
    location /controller/api/v1/register {
        proxy_pass http://cloud;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }

    location /media {
        alias /s3/images;
    }

    location /api/v1/results {
        rewrite ^/api/v1/results/(trade|xunit|robot|kleenex|raw)$ /api/v1/upload/results/$1;
    }

    location /api/v1/genie {
        # (/upload/{(results|zip|tar|txt|yaml) - type defaulted to results for genie})
        rewrite ^/api/v1/genie/runs(.*)$ /api/v1/upload/results;
    }

    location ~* /api/v1/upload/image/?$ {
        proxy_set_header X-Real-IP $remote_addr;
        # auth_request /authenticate;
        client_max_body_size 0m;
        upload_pass /complete;
        upload_pass_args on;
        upload_store /usr/src/copyservice/uploads;
        upload_store_access user:rw group:rw all:r;
        upload_set_form_field name "$upload_file_name";
        upload_set_form_field content_type "$upload_content_type";
        upload_set_form_field path "$upload_tmp_path";
        upload_set_form_field custom_type image;
        upload_aggregate_form_field md5 "$upload_file_md5";
        upload_aggregate_form_field size "$upload_file_size";
        upload_pass_form_field "expires";
        upload_pass_form_field "result_id";
        upload_pass_form_field "related_id";
        upload_pass_form_field "component";
        upload_pass_form_field "branch";
        upload_pass_form_field "format";
        upload_pass_form_field "trade_link";
        upload_pass_form_field "username";
        upload_cleanup 400 404 499 500-505;
    }

    location ~* /api/v1/upload/results/?$ {
        proxy_set_header X-Real-IP $remote_addr;
        # auth_request /authenticate;
        client_max_body_size 0m;
        upload_pass /complete;
        upload_pass_args on;
        upload_store /usr/src/copyservice/uploads;
        upload_store_access user:rw group:rw all:r;
        upload_set_form_field name "$upload_file_name";
        upload_set_form_field content_type "$upload_content_type";
        upload_set_form_field path "$upload_tmp_path";
        upload_set_form_field custom_type results;
        upload_aggregate_form_field md5 "$upload_file_md5";
        upload_aggregate_form_field size "$upload_file_size";
        upload_pass_form_field "expires";
        upload_pass_form_field "result_id";
        upload_pass_form_field "related_id";
        upload_pass_form_field "component";
        upload_pass_form_field "branch";
        upload_pass_form_field "format";
        upload_pass_form_field "trade_link";
        upload_pass_form_field "username";
        upload_cleanup 400 404 499 500-505;
    }

    location ~* /api/v1/upload/results/(.+)$ {
        proxy_set_header X-Real-IP $remote_addr;
        # auth_request /authenticate;
        client_max_body_size 0m;
        upload_pass /complete;
        upload_pass_args on;
        upload_store /usr/src/copyservice/uploads;
        upload_store_access user:rw group:rw all:r;
        upload_set_form_field name "$upload_file_name";
        upload_set_form_field content_type "$upload_content_type";
        upload_set_form_field path "$upload_tmp_path";
        upload_set_form_field custom_type results;
        upload_set_form_field format $1;
        upload_aggregate_form_field md5 "$upload_file_md5";
        upload_aggregate_form_field size "$upload_file_size";
        upload_pass_form_field "expires";
        upload_pass_form_field "result_id";
        upload_pass_form_field "related_id";
        upload_pass_form_field "component";
        upload_pass_form_field "branch";
        upload_pass_form_field "trade_link";
        upload_pass_form_field "username";
        upload_cleanup 400 404 499 500-505;
    }

    location /complete {
        proxy_pass http://gateways/api/v1/upload/complete;
        rewrite ^/(.*)/$ /$1;
        proxy_read_timeout 60s;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location ~* /api/v1/files/(.+)/download {
        error_page 302 = @service_static_file;
        proxy_intercept_errors on;
        proxy_set_header Host $host;
        proxy_pass http://copyservice/api/v1/files/$1/download?signature=$arg_signature&expires=$arg_expires;
    }

    location @service_static_file {
        root /;
        add_header Content-Disposition "attachment; filename=$upstream_http_file_name";
        add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        try_files /usr/src/copyservice/uploads/$upstream_http_location =404;
    }

    location /api/v1/files {
        proxy_pass http://copyservice/api/v1/files;
        rewrite ^/(.*)/$ /$1;
    }

    location /api/v1/files/summary {
        proxy_pass http://copyservice/api/v1/files/summary;
        rewrite ^/(.*)/$ /$1;
    }

    location /api/v1/health {
        proxy_pass http://copyservice/api/v1/health;
        rewrite ^/(.*)/$ /$1;
    }

    location /documentation{
        try_files $uri $uri/ /documentation/index.html =404;
    }
}
